const DB_NAME="VirtualCADB",DB_VERSION=3;class ChatbotStorage{constructor(){this.dbName=DB_NAME,this.version=3,this.db=null}async openDB(){return this.db?this.db:new Promise((e,t)=>{const s=indexedDB.open(this.dbName,this.version);s.onerror=e=>t("Database error: "+e.target.errorCode),s.onsuccess=t=>{this.db=t.target.result,e(this.db)},s.onupgradeneeded=e=>{const t=e.target.result;["userProfile","characters","groups","authTokens","secretCode","updateCards"].forEach(e=>{t.objectStoreNames.contains(e)||t.createObjectStore(e,{keyPath:"id"})})}})}async performTransaction(e,t,s){const r=await this.openDB();return new Promise((a,o)=>{const n=r.transaction(e,t),i=n.objectStore(e);n.oncomplete=()=>a(),n.onerror=e=>o(e.target.error),s(i,a,o)})}async getItem(e,t){const s=(await this.openDB()).transaction(e,"readonly").objectStore(e).get(t);return new Promise((e,t)=>{s.onsuccess=()=>e(s.result||null),s.onerror=()=>t(s.error)})}async setItem(e,t){await this.performTransaction(e,"readwrite",(e,s)=>{const r=e.put(t);r.onsuccess=()=>s(r.result)})}async setItems(e,t){await this.performTransaction(e,"readwrite",async(e,s)=>{if(await new Promise((t,s)=>{const r=e.clear();r.onsuccess=t,r.onerror=s}),Array.isArray(t))for(const s of t)e.put(s);s()})}async getAllItems(e){const t=(await this.openDB()).transaction(e,"readonly").objectStore(e).getAll();return new Promise((e,s)=>{t.onsuccess=()=>e(t.result||[]),t.onerror=()=>s(t.error)})}async getUserProfile(){return await this.getItem("userProfile","mainUser")}async setUserProfile(e){await this.setItem("userProfile",{...e,id:"mainUser"})}async getCharacters(){return this.getAllItems("characters")}async setCharacters(e){await this.setItems("characters",e)}async getGroups(){return this.getAllItems("groups")}async setGroups(e){await this.setItems("groups",e)}async getUpdateCards(){return this.getAllItems("updateCards")}async setUpdateCards(e){await this.setItems("updateCards",e)}async getAuthToken(){const e=await this.getItem("authTokens","googleAuth");return e?e.token:null}async setAuthToken(e){await this.setItem("authTokens",{id:"googleAuth",token:e})}async removeAuthToken(){await this.performTransaction("authTokens","readwrite",(e,t)=>{e.delete("googleAuth").onsuccess=t})}async getSecretCode(){const e=await this.getItem("secretCode","appSecret");return e?e.code:null}async setSecretCode(e){await this.setItem("secretCode",{id:"appSecret",code:e})}async removeSecretCode(){await this.performTransaction("secretCode","readwrite",(e,t)=>{e.delete("appSecret").onsuccess=t})}async getAllData(){return{userProfile:await this.getUserProfile(),characters:await this.getCharacters(),groups:await this.getGroups(),updateCards:await this.getUpdateCards()}}async setAllData(e){e.userProfile&&await this.setUserProfile(e.userProfile),e.characters&&await this.setCharacters(e.characters),e.groups&&await this.setGroups(e.groups),e.updateCards&&await this.setUpdateCards(e.updateCards)}}window.chatbotStorage=new ChatbotStorage,console.log("ðŸ“¦ IndexedDB storage initialized (v3) for Virtual Chartered Accountants app");